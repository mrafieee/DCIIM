(function(a){a.fn.actions=function(d){var c=a.extend({},a.fn.actions.defaults,d);var b=a(this);var e=false;checker=function(f){if(f){showQuestion()}else{reset()}a(b).attr("checked",f).parent().parent().toggleClass(c.selectedClass,f)};updateCounter=function(){var f=a(b).filter(":checked").length;a(c.counterContainer).html(interpolate(ngettext("%(sel)s of %(cnt)s selected","%(sel)s of %(cnt)s selected",f),{sel:f,cnt:_actions_icnt},true));a(c.allToggle).attr("checked",function(){if(f==b.length){value=true;showQuestion()}else{value=false;clearAcross()}return value})};showQuestion=function(){a(c.acrossClears).hide();a(c.acrossQuestions).show();a(c.allContainer).hide()};showClear=function(){a(c.acrossClears).show();a(c.acrossQuestions).hide();a(c.actionContainer).toggleClass(c.selectedClass);a(c.allContainer).show();a(c.counterContainer).hide()};reset=function(){a(c.acrossClears).hide();a(c.acrossQuestions).hide();a(c.allContainer).hide();a(c.counterContainer).show()};clearAcross=function(){reset();a(c.acrossInput).val(0);a(c.actionContainer).removeClass(c.selectedClass)};a(c.counterContainer).show();a(this).filter(":checked").each(function(f){a(this).parent().parent().toggleClass(c.selectedClass);updateCounter();if(a(c.acrossInput).val()==1){showClear()}});a(c.allToggle).show().click(function(){checker(a(this).attr("checked"));updateCounter()});a("div.actions span.question a").click(function(f){f.preventDefault();a(c.acrossInput).val(1);showClear()});a("div.actions span.clear a").click(function(f){f.preventDefault();a(c.allToggle).attr("checked",false);clearAcross();checker(0);updateCounter()});lastChecked=null;a(b).click(function(g){if(!g){var g=window.event}var h=g.target?g.target:g.srcElement;if(lastChecked&&a.data(lastChecked)!=a.data(h)&&g.shiftKey==true){var f=false;a(lastChecked).attr("checked",h.checked).parent().parent().toggleClass(c.selectedClass,h.checked);a(b).each(function(){if(a.data(this)==a.data(lastChecked)||a.data(this)==a.data(h)){f=(f)?false:true}if(f){a(this).attr("checked",h.checked).parent().parent().toggleClass(c.selectedClass,h.checked)}})}a(h).parent().parent().toggleClass(c.selectedClass,h.checked);lastChecked=h;updateCounter()});a("form#changelist-form table#result_list tr").find("td:gt(0) :input").change(function(){e=true});a('form#changelist-form button[name="index"]').click(function(f){if(e){return confirm(gettext("You have unsaved changes on individual editable fields. If you run an action, your unsaved changes will be lost."))}});a('form#changelist-form input[name="_save"]').click(function(g){var f=false;a("div.actions select option:selected").each(function(){if(a(this).val()){f=true}});if(f){if(e){return confirm(gettext("You have selected an action, but you haven't saved your changes to individual fields yet. Please click OK to save. You'll need to re-run the action."))}else{return confirm(gettext("You have selected an action, and you haven't made any changes on individual fields. You're probably looking for the Go button rather than the Save button."))}}})};a.fn.actions.defaults={actionContainer:"div.actions",counterContainer:"span.action-counter",allContainer:"div.actions span.all",acrossInput:"div.actions input.select-across",acrossQuestions:"div.actions span.question",acrossClears:"div.actions span.clear",allToggle:"#action-toggle",selectedClass:"selected"}})(django.jQuery);