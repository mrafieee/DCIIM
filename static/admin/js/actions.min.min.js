(function(b){b.fn.actions=function(g){var h=b.extend({},b.fn.actions.defaults,g);var a=b(this);var f=false;checker=function(c){if(c){showQuestion()}else{reset()}b(a).attr("checked",c).parent().parent().toggleClass(h.selectedClass,c)};updateCounter=function(){var c=b(a).filter(":checked").length;b(h.counterContainer).html(interpolate(ngettext("%(sel)s of %(cnt)s selected","%(sel)s of %(cnt)s selected",c),{sel:c,cnt:_actions_icnt},true));b(h.allToggle).attr("checked",function(){if(c==a.length){value=true;showQuestion()}else{value=false;clearAcross()}return value})};showQuestion=function(){b(h.acrossClears).hide();b(h.acrossQuestions).show();b(h.allContainer).hide()};showClear=function(){b(h.acrossClears).show();b(h.acrossQuestions).hide();b(h.actionContainer).toggleClass(h.selectedClass);b(h.allContainer).show();b(h.counterContainer).hide()};reset=function(){b(h.acrossClears).hide();b(h.acrossQuestions).hide();b(h.allContainer).hide();b(h.counterContainer).show()};clearAcross=function(){reset();b(h.acrossInput).val(0);b(h.actionContainer).removeClass(h.selectedClass)};b(h.counterContainer).show();b(this).filter(":checked").each(function(c){b(this).parent().parent().toggleClass(h.selectedClass);updateCounter();if(b(h.acrossInput).val()==1){showClear()}});b(h.allToggle).show().click(function(){checker(b(this).attr("checked"));updateCounter()});b("div.actions span.question a").click(function(c){c.preventDefault();b(h.acrossInput).val(1);showClear()});b("div.actions span.clear a").click(function(c){c.preventDefault();b(h.allToggle).attr("checked",false);clearAcross();checker(0);updateCounter()});lastChecked=null;b(a).click(function(d){if(!d){var d=window.event}var c=d.target?d.target:d.srcElement;if(lastChecked&&b.data(lastChecked)!=b.data(c)&&d.shiftKey==true){var e=false;b(lastChecked).attr("checked",c.checked).parent().parent().toggleClass(h.selectedClass,c.checked);b(a).each(function(){if(b.data(this)==b.data(lastChecked)||b.data(this)==b.data(c)){e=(e)?false:true}if(e){b(this).attr("checked",c.checked).parent().parent().toggleClass(h.selectedClass,c.checked)}})}b(c).parent().parent().toggleClass(h.selectedClass,c.checked);lastChecked=c;updateCounter()});b("form#changelist-form table#result_list tr").find("td:gt(0) :input").change(function(){f=true});b('form#changelist-form button[name="index"]').click(function(c){if(f){return confirm(gettext("You have unsaved changes on individual editable fields. If you run an action, your unsaved changes will be lost."))}});b('form#changelist-form input[name="_save"]').click(function(c){var d=false;b("div.actions select option:selected").each(function(){if(b(this).val()){d=true}});if(d){if(f){return confirm(gettext("You have selected an action, but you haven't saved your changes to individual fields yet. Please click OK to save. You'll need to re-run the action."))}else{return confirm(gettext("You have selected an action, and you haven't made any changes on individual fields. You're probably looking for the Go button rather than the Save button."))}}})};b.fn.actions.defaults={actionContainer:"div.actions",counterContainer:"span.action-counter",allContainer:"div.actions span.all",acrossInput:"div.actions input.select-across",acrossQuestions:"div.actions span.question",acrossClears:"div.actions span.clear",allToggle:"#action-toggle",selectedClass:"selected"}})(django.jQuery);